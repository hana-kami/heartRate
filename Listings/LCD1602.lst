C51 COMPILER V9.54   LCD1602                                                               05/10/2023 12:44:29 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\L
                    -CD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <reg52.h>
   2          
   3          #include "LCD1602.h"
   4          //引脚配置：
   5          sbit LCD_RS = P2^7;
   6          sbit LCD_RW = P2^6;
   7          sbit LCD_EN = P2^5;
   8          #define LCD_DataPort P0
   9          
  10          void Delay(unsigned int xms)
  11          {
  12   1        unsigned char i, j;
  13   1        while(xms--)
  14   1        {
  15   2          i = 2;
  16   2          j = 239;
  17   2          do
  18   2          {
  19   3            while (--j);
  20   3          } while (--i);
  21   2        }
  22   1      }
  23          /**
  24            * @brief  LCD1602写命令
  25            * @param  Command 要写入的命令
  26            * @retval 无
  27            */
  28          void LCD_WriteCommand(unsigned char Command)
  29          {
  30   1        LCD_RS=0;
  31   1        LCD_RW=0;
  32   1        LCD_DataPort=Command;
  33   1        LCD_EN=1;
  34   1        Delay(1);
  35   1        LCD_EN=0;
  36   1        Delay(1);
  37   1      }
  38          
  39          /**
  40            * @brief  LCD1602写数据
  41            * @param  Data 要写入的数据
  42            * @retval 无
  43            */
  44          void LCD_WriteData(unsigned char Data)
  45          {
  46   1        LCD_RS=1;
  47   1        LCD_RW=0;
  48   1        LCD_DataPort=Data;
  49   1        LCD_EN=1;
  50   1        Delay(1);
  51   1        LCD_EN=0;
  52   1        Delay(1);
  53   1      }
  54          
C51 COMPILER V9.54   LCD1602                                                               05/10/2023 12:44:29 PAGE 2   

  55          /**
  56            * @brief  LCD1602设置光标位置
  57            * @param  Line 行位置，范围：1~2
  58            * @param  Column 列位置，范围：1~16
  59            * @retval 无
  60            */
  61          void LCD_SetCursor(unsigned char Line,unsigned char Column)
  62          {
  63   1        if(Line==1)
  64   1        {
  65   2          LCD_WriteCommand(0x80|(Column-1));
  66   2        }
  67   1        else if(Line==2)
  68   1        {
  69   2          LCD_WriteCommand(0x80|(Column-1+0x40));
  70   2        }
  71   1      }
  72          
  73          /**
  74            * @brief  LCD1602初始化函数
  75            * @param  无
  76            * @retval 无
  77            */
  78          void LCD_Init()
  79          {
  80   1        LCD_WriteCommand(0x38);//八位数据接口，两行显示，5*7点阵
  81   1        LCD_WriteCommand(0x0c);//显示开，光标关，闪烁关
  82   1        LCD_WriteCommand(0x06);//数据读写操作后，光标自动加一，画面不动
  83   1        LCD_WriteCommand(0x01);//光标复位，清屏
  84   1      }
  85          
  86          /**
  87            * @brief  在LCD1602指定位置上显示一个字符
  88            * @param  Line 行位置，范围：1~2
  89            * @param  Column 列位置，范围：1~16
  90            * @param  Char 要显示的字符
  91            * @retval 无
  92            */
  93          //void LCD_ShowChar(unsigned char Line,unsigned char Column,char Char)
  94          //{
  95          //  LCD_SetCursor(Line,Column);
  96          //  LCD_WriteData(Char);
  97          //}
  98          
  99          /**
 100            * @brief  在LCD1602指定位置开始显示所给字符串
 101            * @param  Line 起始行位置，范围：1~2
 102            * @param  Column 起始列位置，范围：1~16
 103            * @param  String 要显示的字符串
 104            * @retval 无
 105            */
 106          void LCD_ShowString(unsigned char Line,unsigned char Column,char *String)
 107          {
 108   1        unsigned char i;
 109   1        LCD_SetCursor(Line,Column);
 110   1        for(i=0;String[i]!='\0';i++)
 111   1        {
 112   2          LCD_WriteData(String[i]);
 113   2        }
 114   1      }
 115          
 116          /**
C51 COMPILER V9.54   LCD1602                                                               05/10/2023 12:44:29 PAGE 3   

 117            * @brief  返回值=X的Y次方
 118            */
 119          int LCD_Pow(int X,int Y)
 120          {
 121   1        unsigned char i;
 122   1        int Result=1;
 123   1        for(i=0;i<Y;i++)
 124   1        {
 125   2          Result*=X;
 126   2        }
 127   1        return Result;
 128   1      }
 129          
 130          /**
 131            * @brief  在LCD1602指定位置开始显示所给数字
 132            * @param  Line 起始行位置，范围：1~2
 133            * @param  Column 起始列位置，范围：1~16
 134            * @param  Number 要显示的数字，范围：0~65535
 135            * @param  Length 要显示数字的长度，范围：1~5
 136            * @retval 无
 137            */
 138          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 139          {
 140   1        unsigned char i;
 141   1        LCD_SetCursor(Line,Column);
 142   1        for(i=Length;i>0;i--)
 143   1        {
 144   2          LCD_WriteData(Number/LCD_Pow(10,i-1)%10+'0');
 145   2        }
 146   1      }
 147          
 148          ///**
 149          //  * @brief  在LCD1602指定位置开始以有符号十进制显示所给数字
 150          //  * @param  Line 起始行位置，范围：1~2
 151          //  * @param  Column 起始列位置，范围：1~16
 152          //  * @param  Number 要显示的数字，范围：-32768~32767
 153          //  * @param  Length 要显示数字的长度，范围：1~5
 154          //  * @retval 无
 155          //  */
 156          //void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 157          //{
 158          //  unsigned char i;
 159          //  unsigned int Number1;
 160          //  LCD_SetCursor(Line,Column);
 161          //  if(Number>=0)
 162          //  {
 163          //    LCD_WriteData('+');
 164          //    Number1=Number;
 165          //  }
 166          //  else
 167          //  {
 168          //    LCD_WriteData('-');
 169          //    Number1=-Number;
 170          //  }
 171          //  for(i=Length;i>0;i--)
 172          //  {
 173          //    LCD_WriteData(Number1/LCD_Pow(10,i-1)%10+'0');
 174          //  }
 175          //}
 176          
 177          ///**
 178          //  * @brief  在LCD1602指定位置开始以十六进制显示所给数字
C51 COMPILER V9.54   LCD1602                                                               05/10/2023 12:44:29 PAGE 4   

 179          //  * @param  Line 起始行位置，范围：1~2
 180          //  * @param  Column 起始列位置，范围：1~16
 181          //  * @param  Number 要显示的数字，范围：0~0xFFFF
 182          //  * @param  Length 要显示数字的长度，范围：1~4
 183          //  * @retval 无
 184          //  */
 185          //void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 186          //{
 187          //  unsigned char i,SingleNumber;
 188          //  LCD_SetCursor(Line,Column);
 189          //  for(i=Length;i>0;i--)
 190          //  {
 191          //    SingleNumber=Number/LCD_Pow(16,i-1)%16;
 192          //    if(SingleNumber<10)
 193          //    {
 194          //      LCD_WriteData(SingleNumber+'0');
 195          //    }
 196          //    else
 197          //    {
 198          //      LCD_WriteData(SingleNumber-10+'A');
 199          //    }
 200          //  }
 201          //}
 202          
 203          ///**
 204          //  * @brief  在LCD1602指定位置开始以二进制显示所给数字
 205          //  * @param  Line 起始行位置，范围：1~2
 206          //  * @param  Column 起始列位置，范围：1~16
 207          //  * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111
 208          //  * @param  Length 要显示数字的长度，范围：1~16
 209          //  * @retval 无
 210          //  */
 211          //void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 212          //{
 213          //  unsigned char i;
 214          //  LCD_SetCursor(Line,Column);
 215          //  for(i=Length;i>0;i--)
 216          //  {
 217          //    LCD_WriteData(Number/LCD_Pow(2,i-1)%2+'0');
 218          //  }
 219          //}
 220          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    239    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
